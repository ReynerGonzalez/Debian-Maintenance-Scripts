#!/bin/bash

# Idea from Oktawave.com

set -e -x

cat > /etc/sysctl.d/99-virtual.conf <<"EOF"
# https://www.kernel.org/doc/Documentation/sysctl/kernel.txt
# the number of seconds the kernel waits before rebooting on a panic
kernel.panic = 10

# https://www.kernel.org/doc/Documentation/sysctl/vm.txt
# define how aggressive the kernel will swap memory pages
vm.swappiness = 10
# force the Linux VM to keep a minimum number of kilobytes free
vm.min_free_kbytes = 32768
# oom_killer can kill rogue processes and system will survive
#vm.panic_on_oom = 0
EOF

# @TODO
cat > /dev/null <<"EOF"
# https://www.kernel.org/doc/Documentation/sysctl/net.txt
net.core.netdev_max_backlog = 30000
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.rp_filter = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.rp_filter = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.default.send_redirects = 0

net.ipv4.tcp_congestion_control = htcp
net.ipv4.tcp_mtu_probing = 1
net.ipv4.tcp_rmem = 4096 87380 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
EOF
