#
# GitLab CI for a Laravel project.
#
# DOCS          :https://github.com/szepeviktor/debian-server-tools/blob/master/webserver/Continuous-integration-Continuous-delivery.md
# DOCS          :https://gitlab.com/help/ci/yaml/README.md
# DOCS          :https://gitlab.com/help/ci/variables/README.md
# SECRET        :SSH_KNOWN_HOSTS
# SECRET        :SSH_PRIVATE_KEY
# SECRET        :COMPOSER_AUTH_JSON

# https://gitlab.com/help/user/project/container_registry
image: registry.gitlab.com/group/project:7.2

services:
  - mariadb:10.1
  #- mysql:5.7

variables:
  # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
  MYSQL_ROOT_PASSWORD: "dbpassword"
  MYSQL_DATABASE: "dbuser"

# Move Composer cache inside the project workspace
cache:
  paths:
    - .composercache

test:
  before_script:
    # Environment information
    - |
      lsb_release --all
      mysql --version
      redis-server --version
      php -v
      composer --version
      robo --version
      parallel-lint --help | head -n 1
      phpstan --version
      whoami
      pwd
      ls -l -A
    # GitLab's public key (output of `ssh-keyscan -p $CD_SSH_PORT $CD_SSH_HOST | base64 -w 0; echo`)
    - mkdir --mode=0700 ~/.ssh
    - echo "$CD_SSH_KNOWN_HOSTS_B64" | base64 --decode >>~/.ssh/known_hosts
    # Private Gitlab repositories access (ECDSA)
    - echo "$SSH_PRIVATE_KEY" | base64 --decode >~/.ssh/id_ecdsa
    - chmod 0600 ~/.ssh/id_ecdsa
    # Private Composer repositories access
    - mkdir --parents ~/.composer
    - echo "$COMPOSER_AUTH_JSON" | base64 --decode >~/.composer/auth.json
    - chmod 0600 ~/.composer/auth.json
    # Character check (lower ASCII, Hungarian, currencies, Turkish)
    # Czech alphabet: ÁČĎÉĚÍŇÓŘŠŤÚŮÝŽáčďéěíňóřšťúůýž
    - |
      LC_ALL=C.UTF-8 find . -type f -exec grep -PHn '[^ -~ÁÉÍÓÖŐÚÜŰáéíóöőúüű€Kč₽₺ÇĞİÖŞÜçğıöşü]' "{}" ";"
    # Composer
    - composer config cache-dir "${CI_PROJECT_DIR}/.composercache"
    - composer validate --ansi
    # Includes `artisan package:discover` (depends on 'app.debug')
    - composer install --ansi --prefer-dist --no-suggest
    # On Deploy: - composer install --no-dev --prefer-dist --prefer-stable --classmap-authoritative --no-suggest
    #            - check .env: APP_ENV=production , APP_DEBUG=false
    #            - caches: application (Redis), configuration, route, view
    - composer outdated --ansi --direct
    #- security-checker security:check # roave/security-advisories
    # Jorijn/laravel-security-checker
    # dependencies.io
    # Set up database
    - echo "APP_NAME=Laravel" >.env
    - echo "APP_ENV=testing" >>.env
    - echo 'APP_KEY=base64:8WQ2S3IXjxCHxUdtzpY3JQmM00OKgSJTOVf+rqQ8fh0=' >>.env
    - echo "APP_DEBUG=true" >>.env
    - echo "DB_HOST=mysql" >>.env
    - echo "DB_DATABASET=${MYSQL_DATABASE}" >>.env
    - echo "DB_USERNAME=root" >>.env
    - echo "DB_PASSWORD=${MYSQL_ROOT_PASSWORD}" >>.env
    - php artisan migrate:refresh --seed
  script:
    # Syntax check
    - parallel-lint --blame --exclude vendor/ .
    # Blade check
    # Before Laravel v5.6.13 requires: melihovv/laravel-compile-views
    #- composer info --installed melihovv/laravel-compile-views
    ##- sed -e 's|//$|//\n$this->app->register(\\Melihovv\\LaravelCompileViews\\ServiceProvider::class);|' -i app/Providers/AppServiceProvider.php
    #- php artisan view:compile
    - php artisan view:cache
    - parallel-lint storage/framework/views
    ## Facade support - requires: barryvdh/laravel-ide-helper
    #- composer info --installed barryvdh/laravel-ide-helper
    ##- sed -e 's|//$|//\n$this->app->register(\\Barryvdh\\LaravelIdeHelper\\IdeHelperServiceProvider::class);|' -i app/Providers/AppServiceProvider.php
    #- php artisan ide-helper:generate
    # Static analysis
    - php artisan code:analyse --ansi --no-progress --configuration=phpstan.neon --level=max
    # Check route methods
    - php artisan route:check
    # Unit tests
    # https://phpunit.de/manual/current/en/textui.html#textui.clioptions
    - vendor/bin/phpunit --colors=always --configuration phpunit.xml --coverage-text
  after_script:
    # Warnings
    - bash ./project-warnings.sh
    # Clean up secrets
    - rm ~/.ssh/id_ecdsa ~/.ssh/known_hosts ~/.composer/auth.json

# Code Quality
# https://docs.gitlab.com/ee/ci/examples/code_climate.html

# Control deploy from commit messages: [deploy:staging]
# Control deploy by manual action: https://gitlab.com/help/ci/yaml/README.md#user-content-whenmanual
