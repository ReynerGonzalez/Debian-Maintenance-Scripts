<IfModule mod_ssl.c>

    # Pseudo Random Number Generator (PRNG):
    # Configure one or more sources to seed the PRNG of the SSL library.
    # The seed data should be of good random quality.
    # WARNING! On some platforms /dev/random blocks if not enough entropy
    # is available. This means you then cannot use the /dev/random device
    # because it would lead to very long connection times (as long as
    # it requires to make more entropy available). But usually those
    # platforms additionally provide a /dev/urandom device which doesn't
    # block. So, if available, use this one instead. Read the mod_ssl User
    # Manual for more details.
    #
    SSLRandomSeed startup builtin
    SSLRandomSeed startup file:/dev/urandom 512
    SSLRandomSeed connect builtin
    SSLRandomSeed connect file:/dev/urandom 512

    ##
    ##  SSL Global Context
    ##
    ##  All SSL configuration in this context applies both to
    ##  the main server and all SSL-enabled virtual hosts.
    ##

    #
    #   Some MIME-types for downloading Certificates and CRLs
    #
    AddType application/x-x509-ca-cert .crt
    AddType application/x-pkcs7-crl .crl

    #   Pass Phrase Dialog:
    #   Configure the pass phrase gathering process.
    #   The filtering dialog program (`builtin' is a internal
    #   terminal dialog) has to provide the pass phrase on stdout.
    SSLPassPhraseDialog exec:/usr/share/apache2/ask-for-passphrase

    #   Inter-Process Session Cache:
    #   Configure the SSL Session Cache: First the mechanism
    #   to use and second the expiring timeout (in seconds).
    #   (The mechanism dbm has known memory leaks and should not be used).
    #SSLSessionCache dbm:${APACHE_RUN_DIR}/ssl_scache
    SSLSessionCache shmcb:${APACHE_RUN_DIR}/ssl_scache(512000)
    SSLSessionCacheTimeout 300

    #   Semaphore:
    #   Configure the path to the mutual exclusion semaphore the
    #   SSL engine uses internally for inter-process synchronization.
    #   (Disabled by default, the global Mutex directive consolidates by default
    #   this)
    #Mutex file:${APACHE_LOCK_DIR}/ssl_mutex ssl-cache


    #   SSL Cipher Suite
    # "Intermediate" SSLCipherSuite from Mozilla SSL Configuration Generator
    #     dpkg -l | grep "apache2\|openssl"
    #     https://ssl-config.mozilla.org/#server=apache&server-version=2.4.38&config=intermediate
    #     wget -qO- https://mozilla.github.io/server-side-tls/json/server-side-tls-conf.json | jq '.configurations.intermediate.openssl_ciphersuites'
    # Prioritize AES128-GCM when AES-NI is supported
    #     grep -E -m 1 '^flags\s*:.*\saes(\s|$)' /proc/cpuinfo
    # * As of 2019-06-29
    SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    # "Modern"
    # https://wiki.openssl.org/index.php/TLS1.3#Ciphersuites
    # https://www.apache.org/dist/httpd/CHANGES_2.4.37
    # https://packages.sury.org/apache2/dists/stretch/

    # SSL server cipher order preference:
    # Use server priorities for cipher algorithm choice.
    # Clients may prefer lower grade encryption.  You should enable this
    # option if you want to enforce stronger encryption, and can afford
    # the CPU cost, and did not override SSLCipherSuite in a way that puts
    # insecure ciphers first.
    # Default: Off
    SSLHonorCipherOrder on

    #   The protocols to enable.
    #   Available values: all, SSLv3, TLSv1, TLSv1.1, TLSv1.2
    #   SSL v2 is no longer supported
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    # "Modern"
    #SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1 -TLSv1.2

    #   Allow insecure renegotiation with clients which do not yet support the
    #   secure renegotiation protocol. Default: Off
    #SSLInsecureRenegotiation on

    #   Whether to forbid non-SNI clients to access name based virtual hosts.
    #   Default: Off
    SSLStrictSNIVHostCheck off

    # Prevent CRIME attack
    SSLCompression off

    # Using them without restarting the web server
    # with an appropriate frequency (e.g. daily) compromises perfect forward secrecy.
    # "/etc/init.d/apache2 reload" in /etc/logrotate.d does clear session tickets.
    SSLSessionTickets on

    # OCSP Stapling (could also be in every virtual host)
    SSLUseStapling On
    SSLStaplingResponderTimeout 5
    SSLStaplingReturnResponderErrors off
    SSLStaplingCache "shmcb:${APACHE_RUN_DIR}/ssl_gcache_data(128000)"
    SSLStaplingStandardCacheTimeout 43200

</IfModule>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
